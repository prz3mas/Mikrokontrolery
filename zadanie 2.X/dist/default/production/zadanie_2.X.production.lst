

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun May 17 18:12:00 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 2.05
    21                           ; Generated 20/12/2018 GMT
    22                           ; 
    23                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4620 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _TRISE	set	3990
    55  0000                     _TRISD	set	3989
    56  0000                     _TRISC	set	3988
    57  0000                     _TRISB	set	3987
    58  0000                     _TRISA	set	3986
    59  0000                     _ADCON2	set	4032
    60  0000                     _ADCON1	set	4033
    61  0000                     _PORTBbits	set	3969
    62  0000                     _PORTD	set	3971
    63  0000                     _ADRESL	set	4035
    64  0000                     _ADRESH	set	4036
    65  0000                     _ADCON0bits	set	4034
    66  0000                     _ADCON0	set	4034
    67                           
    68                           ; #config settings
    69  0000                     
    70                           	psect	cinit
    71  00FC98                     __pcinit:
    72                           	opt callstack 0
    73  00FC98                     start_initialization:
    74                           	opt callstack 0
    75  00FC98                     __initialization:
    76                           	opt callstack 0
    77  00FC98                     end_of_initialization:
    78                           	opt callstack 0
    79  00FC98                     __end_of__initialization:
    80                           	opt callstack 0
    81  00FC98  0E00               	movlw	low (__Lmediumconst shr (0+16))
    82  00FC9A  6EF8               	movwf	tblptru,c
    83  00FC9C  0100               	movlb	0
    84  00FC9E  EF88  F07E         	goto	_main	;jump to C main() function
    85                           
    86                           	psect	cstackCOMRAM
    87  000001                     __pcstackCOMRAM:
    88                           	opt callstack 0
    89  000001                     ?_adc:
    90                           	opt callstack 0
    91  000001                     ?___wmul:
    92                           	opt callstack 0
    93  000001                     ?___awdiv:
    94                           	opt callstack 0
    95  000001                     ?___awmod:
    96                           	opt callstack 0
    97  000001                     delay@ms:
    98                           	opt callstack 0
    99  000001                     ___wmul@multiplier:
   100                           	opt callstack 0
   101  000001                     ___awdiv@dividend:
   102                           	opt callstack 0
   103  000001                     ___awmod@dividend:
   104                           	opt callstack 0
   105                           
   106                           ; 2 bytes @ 0x0
   107  000001                     	ds	2
   108  000003                     ??_adc:
   109  000003                     delay@i:
   110                           	opt callstack 0
   111  000003                     ___wmul@multiplicand:
   112                           	opt callstack 0
   113  000003                     ___awdiv@divisor:
   114                           	opt callstack 0
   115  000003                     ___awmod@divisor:
   116                           	opt callstack 0
   117                           
   118                           ; 2 bytes @ 0x2
   119  000003                     	ds	2
   120  000005                     delay@j:
   121                           	opt callstack 0
   122  000005                     ___awdiv@counter:
   123                           	opt callstack 0
   124  000005                     ___awmod@counter:
   125                           	opt callstack 0
   126  000005                     ___wmul@product:
   127                           	opt callstack 0
   128                           
   129                           ; 2 bytes @ 0x4
   130  000005                     	ds	1
   131  000006                     ___awdiv@sign:
   132                           	opt callstack 0
   133  000006                     ___awmod@sign:
   134                           	opt callstack 0
   135                           
   136                           ; 1 bytes @ 0x5
   137  000006                     	ds	1
   138  000007                     adc@kanal:
   139                           	opt callstack 0
   140  000007                     ___awdiv@quotient:
   141                           	opt callstack 0
   142                           
   143                           ; 2 bytes @ 0x6
   144  000007                     	ds	1
   145  000008                     ?___lwdiv:
   146                           	opt callstack 0
   147  000008                     ___lwdiv@dividend:
   148                           	opt callstack 0
   149                           
   150                           ; 2 bytes @ 0x7
   151  000008                     	ds	2
   152  00000A                     ___lwdiv@divisor:
   153                           	opt callstack 0
   154                           
   155                           ; 2 bytes @ 0x9
   156  00000A                     	ds	2
   157  00000C                     ___lwdiv@quotient:
   158                           	opt callstack 0
   159                           
   160                           ; 2 bytes @ 0xB
   161  00000C                     	ds	2
   162  00000E                     ___lwdiv@counter:
   163                           	opt callstack 0
   164                           
   165                           ; 1 bytes @ 0xD
   166  00000E                     	ds	1
   167  00000F                     ??_bcdU:
   168  00000F                     greyU@tmp:
   169                           	opt callstack 0
   170                           
   171                           ; 2 bytes @ 0xE
   172  00000F                     	ds	2
   173  000011                     greyU@del:
   174                           	opt callstack 0
   175  000011                     bcdU@tmp:
   176                           	opt callstack 0
   177                           
   178                           ; 2 bytes @ 0x10
   179  000011                     	ds	2
   180  000013                     greyU@display:
   181                           	opt callstack 0
   182  000013                     bcdU@del:
   183                           	opt callstack 0
   184                           
   185                           ; 2 bytes @ 0x12
   186  000013                     	ds	1
   187  000014                     greyU@licznik:
   188                           	opt callstack 0
   189                           
   190                           ; 1 bytes @ 0x13
   191  000014                     	ds	1
   192  000015                     bcdU@display:
   193                           	opt callstack 0
   194                           
   195                           ; 1 bytes @ 0x14
   196  000015                     	ds	1
   197  000016                     bcdU@licznik:
   198                           	opt callstack 0
   199                           
   200                           ; 1 bytes @ 0x15
   201  000016                     	ds	1
   202  000017                     setup@input:
   203                           	opt callstack 0
   204                           
   205                           ; 1 bytes @ 0x16
   206  000017                     	ds	1
   207  000018                     main@button:
   208                           	opt callstack 0
   209                           
   210                           ; 1 bytes @ 0x17
   211  000018                     	ds	1
   212                           
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 148 in file "main.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;  button          1   23[COMRAM] unsigned char 
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   227 ;; Tracked objects:
   228 ;;		On entry : 0/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   235 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   236 ;;Total ram usage:        1 bytes
   237 ;; Hardware stack levels required when called:    3
   238 ;; This function calls:
   239 ;;		_setup
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           	psect	text0
   246  00FD10                     __ptext0:
   247                           	opt callstack 0
   248  00FD10                     _main:
   249                           	opt callstack 28
   250                           
   251                           ;main.c: 151:     ADCON0=0x01;
   252                           
   253                           ;incstack = 0
   254  00FD10  0E01               	movlw	1
   255  00FD12  6EC2               	movwf	4034,c	;volatile
   256                           
   257                           ;main.c: 152:     ADCON1=0x0B;
   258  00FD14  0E0B               	movlw	11
   259  00FD16  6EC1               	movwf	4033,c	;volatile
   260                           
   261                           ;main.c: 153:     ADCON2=0x01;
   262  00FD18  0E01               	movlw	1
   263  00FD1A  6EC0               	movwf	4032,c	;volatile
   264                           
   265                           ;main.c: 155:     TRISA=0xC3;
   266  00FD1C  0EC3               	movlw	195
   267  00FD1E  6E92               	movwf	3986,c	;volatile
   268                           
   269                           ;main.c: 156:     TRISB=0x3F;
   270  00FD20  0E3F               	movlw	63
   271  00FD22  6E93               	movwf	3987,c	;volatile
   272                           
   273                           ;main.c: 157:     TRISC=0x01;
   274  00FD24  0E01               	movlw	1
   275  00FD26  6E94               	movwf	3988,c	;volatile
   276                           
   277                           ;main.c: 158:     TRISD=0x00;
   278  00FD28  0E00               	movlw	0
   279  00FD2A  6E95               	movwf	3989,c	;volatile
   280                           
   281                           ;main.c: 159:     TRISE=0x00;
   282  00FD2C  0E00               	movlw	0
   283  00FD2E  6E96               	movwf	3990,c	;volatile
   284                           
   285                           ;main.c: 161:     unsigned char button = 0;
   286  00FD30  0E00               	movlw	0
   287  00FD32  6E18               	movwf	main@button,c
   288  00FD34                     l1166:
   289                           
   290                           ;main.c: 167:     setup(button);
   291  00FD34  5018               	movf	main@button,w,c
   292  00FD36  EC51  F07E         	call	_setup
   293                           
   294                           ;main.c: 172:     if(PORTBbits.RB3 == 0)
   295  00FD3A  B681               	btfsc	3969,3,c	;volatile
   296  00FD3C  D002               	goto	l75
   297                           
   298                           ;main.c: 173:         button--;
   299  00FD3E  0618               	decf	main@button,f,c
   300  00FD40  D002               	goto	l1174
   301  00FD42                     l75:
   302  00FD42  A881               	btfss	3969,4,c	;volatile
   303                           
   304                           ;main.c: 175:         button ++;
   305  00FD44  2A18               	incf	main@button,f,c
   306  00FD46                     l1174:
   307                           
   308                           ;main.c: 177:     if(button == 2) button = 0;
   309  00FD46  0E02               	movlw	2
   310  00FD48  1818               	xorwf	main@button,w,c
   311  00FD4A  A4D8               	btfss	status,2,c
   312  00FD4C  D002               	goto	l1178
   313  00FD4E  0E00               	movlw	0
   314  00FD50  6E18               	movwf	main@button,c
   315  00FD52                     l1178:
   316                           
   317                           ;main.c: 179:     if(button == 255) button = 1;
   318  00FD52  2818               	incf	main@button,w,c
   319  00FD54  A4D8               	btfss	status,2,c
   320  00FD56  D7EE               	goto	l1166
   321  00FD58  0E01               	movlw	1
   322  00FD5A  D7EB               	goto	L1
   323  00FD5C                     __end_of_main:
   324                           	opt callstack 0
   325                           
   326 ;; *************** function _setup *****************
   327 ;; Defined at:
   328 ;;		line 141 in file "main.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;  input           1    wreg     unsigned char 
   331 ;; Auto vars:     Size  Location     Type
   332 ;;  input           1   22[COMRAM] unsigned char 
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   346 ;;Total ram usage:        1 bytes
   347 ;; Hardware stack levels used:    1
   348 ;; Hardware stack levels required when called:    2
   349 ;; This function calls:
   350 ;;		_bcdU
   351 ;;		_greyU
   352 ;; This function is called by:
   353 ;;		_main
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text1
   358  00FCA2                     __ptext1:
   359                           	opt callstack 0
   360  00FCA2                     _setup:
   361                           	opt callstack 28
   362                           
   363                           ;incstack = 0
   364                           ;setup@input stored from wreg
   365  00FCA2  6E17               	movwf	setup@input,c
   366                           
   367                           ;main.c: 141: void setup(unsigned char input);main.c: 142: {;main.c: 143:     if (input 
      +                          == 0 ) {greyU();}
   368  00FCA4  5017               	movf	setup@input,w,c
   369  00FCA6  B4D8               	btfsc	status,2,c
   370  00FCA8  EC0B  F07F         	call	_greyU	;wreg free
   371                           
   372                           ;main.c: 144:     if (input == 1 ) {bcdU();}
   373  00FCAC  0417               	decf	setup@input,w,c
   374  00FCAE  A4D8               	btfss	status,2,c
   375  00FCB0  0012               	return	
   376  00FCB2  ECB9  F07F         	call	_bcdU	;wreg free
   377  00FCB6  0012               	return		;funcret
   378  00FCB8                     __end_of_setup:
   379                           	opt callstack 0
   380                           
   381 ;; *************** function _greyU *****************
   382 ;; Defined at:
   383 ;;		line 91 in file "main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  del             2   16[COMRAM] unsigned int 
   388 ;;  tmp             2   14[COMRAM] unsigned int 
   389 ;;  licznik         1   19[COMRAM] unsigned char 
   390 ;;  display         1   18[COMRAM] unsigned char 
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   403 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   404 ;;Total ram usage:        6 bytes
   405 ;; Hardware stack levels used:    1
   406 ;; Hardware stack levels required when called:    1
   407 ;; This function calls:
   408 ;;		___lwdiv
   409 ;;		___wmul
   410 ;;		_adc
   411 ;;		_delay
   412 ;; This function is called by:
   413 ;;		_setup
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           	psect	text2
   418  00FE16                     __ptext2:
   419                           	opt callstack 0
   420  00FE16                     _greyU:
   421                           	opt callstack 28
   422                           
   423                           ;main.c: 94: unsigned char licznik = 0;
   424                           
   425                           ;incstack = 0
   426  00FE16  0E00               	movlw	0
   427  00FE18  6E14               	movwf	greyU@licznik,c
   428                           
   429                           ;main.c: 97:    while (!((PORTBbits.RB3 == 0) || (PORTBbits.RB4 == 0)))
   430  00FE1A  D02C               	goto	l1130
   431  00FE1C                     l1118:
   432                           
   433                           ;main.c: 98:    {;main.c: 99:     unsigned int tmp;;main.c: 100:     unsigned int del;;m
      +                          ain.c: 101:     tmp=((unsigned int)adc(1) / 220);
   434  00FE1C  0E01               	movlw	1
   435  00FE1E  ECD7  F07E         	call	_adc
   436  00FE22  C001  F008         	movff	?_adc,___lwdiv@dividend
   437  00FE26  C002  F009         	movff	?_adc+1,___lwdiv@dividend+1
   438  00FE2A  0E00               	movlw	0
   439  00FE2C  6E0B               	movwf	___lwdiv@divisor+1,c
   440  00FE2E  0EDC               	movlw	220
   441  00FE30  6E0A               	movwf	___lwdiv@divisor,c
   442  00FE32  ECAE  F07E         	call	___lwdiv	;wreg free
   443  00FE36  C008  F00F         	movff	?___lwdiv,greyU@tmp
   444  00FE3A  C009  F010         	movff	?___lwdiv+1,greyU@tmp+1
   445                           
   446                           ;main.c: 102:     del = ((unsigned int)(tmp)) * 200;
   447  00FE3E  C00F  F001         	movff	greyU@tmp,___wmul@multiplier
   448  00FE42  C010  F002         	movff	greyU@tmp+1,___wmul@multiplier+1
   449  00FE46  0E00               	movlw	0
   450  00FE48  6E04               	movwf	___wmul@multiplicand+1,c
   451  00FE4A  0EC8               	movlw	200
   452  00FE4C  6E03               	movwf	___wmul@multiplicand,c
   453  00FE4E  EC5C  F07E         	call	___wmul	;wreg free
   454  00FE52  C001  F011         	movff	?___wmul,greyU@del
   455  00FE56  C002  F012         	movff	?___wmul+1,greyU@del+1
   456                           
   457                           ;main.c: 104:     display = licznik ^ (licznik >> 1);
   458  00FE5A  90D8               	bcf	status,0,c
   459  00FE5C  3014               	rrcf	greyU@licznik,w,c
   460  00FE5E  1814               	xorwf	greyU@licznik,w,c
   461  00FE60  6E13               	movwf	greyU@display,c
   462                           
   463                           ;main.c: 105:     PORTD = display;
   464  00FE62  C013  FF83         	movff	greyU@display,3971	;volatile
   465                           
   466                           ;main.c: 107:     delay(del);
   467  00FE66  C011  F001         	movff	greyU@del,delay@ms
   468  00FE6A  C012  F002         	movff	greyU@del+1,delay@ms+1
   469  00FE6E  EC6F  F07E         	call	_delay	;wreg free
   470                           
   471                           ;main.c: 109:     licznik ++;
   472  00FE72  2A14               	incf	greyU@licznik,f,c
   473  00FE74                     l1130:
   474                           
   475                           ;main.c: 97:    while (!((PORTBbits.RB3 == 0) || (PORTBbits.RB4 == 0)))
   476  00FE74  A681               	btfss	3969,3,c	;volatile
   477  00FE76  0012               	return	
   478  00FE78  A881               	btfss	3969,4,c	;volatile
   479  00FE7A  0012               	return	
   480  00FE7C  D7CF               	goto	l1118
   481  00FE7E                     __end_of_greyU:
   482                           	opt callstack 0
   483                           
   484 ;; *************** function ___wmul *****************
   485 ;; Defined at:
   486 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;  multiplier      2    0[COMRAM] unsigned int 
   489 ;;  multiplicand    2    2[COMRAM] unsigned int 
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  product         2    4[COMRAM] unsigned int 
   492 ;; Return value:  Size  Location     Type
   493 ;;                  2    0[COMRAM] unsigned int 
   494 ;; Registers used:
   495 ;;		wreg, status,2, status,0, prodl, prodh
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   501 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   505 ;;Total ram usage:        6 bytes
   506 ;; Hardware stack levels used:    1
   507 ;; This function calls:
   508 ;;		Nothing
   509 ;; This function is called by:
   510 ;;		_greyU
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text3
   515  00FCB8                     __ptext3:
   516                           	opt callstack 0
   517  00FCB8                     ___wmul:
   518                           	opt callstack 28
   519                           
   520                           ;incstack = 0
   521  00FCB8  5001               	movf	___wmul@multiplier,w,c
   522  00FCBA  0203               	mulwf	___wmul@multiplicand,c
   523  00FCBC  CFF3 F005          	movff	prodl,___wmul@product
   524  00FCC0  CFF4 F006          	movff	prodh,___wmul@product+1
   525  00FCC4  5001               	movf	___wmul@multiplier,w,c
   526  00FCC6  0204               	mulwf	___wmul@multiplicand+1,c
   527  00FCC8  50F3               	movf	prodl,w,c
   528  00FCCA  2606               	addwf	___wmul@product+1,f,c
   529  00FCCC  5002               	movf	___wmul@multiplier+1,w,c
   530  00FCCE  0203               	mulwf	___wmul@multiplicand,c
   531  00FCD0  50F3               	movf	prodl,w,c
   532  00FCD2  2606               	addwf	___wmul@product+1,f,c
   533  00FCD4  C005  F001         	movff	___wmul@product,?___wmul
   534  00FCD8  C006  F002         	movff	___wmul@product+1,?___wmul+1
   535  00FCDC  0012               	return		;funcret
   536  00FCDE                     __end_of___wmul:
   537                           	opt callstack 0
   538                           
   539 ;; *************** function _bcdU *****************
   540 ;; Defined at:
   541 ;;		line 115 in file "main.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;  del             2   18[COMRAM] unsigned int 
   546 ;;  tmp             2   16[COMRAM] unsigned int 
   547 ;;  licznik         1   21[COMRAM] unsigned char 
   548 ;;  display         1   20[COMRAM] unsigned char 
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   559 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   560 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   561 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;Total ram usage:        8 bytes
   563 ;; Hardware stack levels used:    1
   564 ;; Hardware stack levels required when called:    1
   565 ;; This function calls:
   566 ;;		___awdiv
   567 ;;		___awmod
   568 ;;		___lwdiv
   569 ;;		_adc
   570 ;;		_delay
   571 ;; This function is called by:
   572 ;;		_setup
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           	psect	text4
   577  00FF72                     __ptext4:
   578                           	opt callstack 0
   579  00FF72                     _bcdU:
   580                           	opt callstack 28
   581                           
   582                           ;main.c: 117: unsigned char licznik = 0;
   583                           
   584                           ;incstack = 0
   585  00FF72  0E00               	movlw	0
   586  00FF74  6E16               	movwf	bcdU@licznik,c
   587                           
   588                           ;main.c: 120:    while (!((PORTBbits.RB3 == 0) || (PORTBbits.RB4 == 0)))
   589  00FF76  D03F               	goto	l1152
   590  00FF78                     l1136:
   591                           
   592                           ;main.c: 121:    {;main.c: 122:     unsigned int tmp;;main.c: 123:     unsigned int del;
      +                          ;main.c: 124:     tmp=((unsigned int)adc(1) / 220);
   593  00FF78  0E01               	movlw	1
   594  00FF7A  ECD7  F07E         	call	_adc
   595  00FF7E  C001  F008         	movff	?_adc,___lwdiv@dividend
   596  00FF82  C002  F009         	movff	?_adc+1,___lwdiv@dividend+1
   597  00FF86  0E00               	movlw	0
   598  00FF88  6E0B               	movwf	___lwdiv@divisor+1,c
   599  00FF8A  0EDC               	movlw	220
   600  00FF8C  6E0A               	movwf	___lwdiv@divisor,c
   601  00FF8E  ECAE  F07E         	call	___lwdiv	;wreg free
   602  00FF92  C008  F011         	movff	?___lwdiv,bcdU@tmp
   603  00FF96  C009  F012         	movff	?___lwdiv+1,bcdU@tmp+1
   604                           
   605                           ;main.c: 125:     del = ((unsigned char)(tmp)) * 200;
   606  00FF9A  5011               	movf	bcdU@tmp,w,c
   607  00FF9C  0DC8               	mullw	200
   608  00FF9E  CFF3 F013          	movff	prodl,bcdU@del
   609  00FFA2  CFF4 F014          	movff	prodh,bcdU@del+1
   610                           
   611                           ;main.c: 128:         if(licznik > 99)
   612  00FFA6  0E63               	movlw	99
   613  00FFA8  6416               	cpfsgt	bcdU@licznik,c
   614  00FFAA  D002               	goto	l1144
   615                           
   616                           ;main.c: 129:             licznik = 0;
   617  00FFAC  0E00               	movlw	0
   618  00FFAE  6E16               	movwf	bcdU@licznik,c
   619  00FFB0                     l1144:
   620                           
   621                           ;main.c: 131:     display = ((licznik / 10) << 4) | (licznik % 10);
   622  00FFB0  C016  F001         	movff	bcdU@licznik,___awmod@dividend
   623  00FFB4  6A02               	clrf	___awmod@dividend+1,c
   624  00FFB6  0E00               	movlw	0
   625  00FFB8  6E04               	movwf	___awmod@divisor+1,c
   626  00FFBA  0E0A               	movlw	10
   627  00FFBC  6E03               	movwf	___awmod@divisor,c
   628  00FFBE  EC3F  F07F         	call	___awmod	;wreg free
   629  00FFC2  C001  F00F         	movff	?___awmod,??_bcdU
   630  00FFC6  C002  F010         	movff	?___awmod+1,??_bcdU+1
   631  00FFCA  C016  F001         	movff	bcdU@licznik,___awdiv@dividend
   632  00FFCE  6A02               	clrf	___awdiv@dividend+1,c
   633  00FFD0  0E00               	movlw	0
   634  00FFD2  6E04               	movwf	___awdiv@divisor+1,c
   635  00FFD4  0E0A               	movlw	10
   636  00FFD6  6E03               	movwf	___awdiv@divisor,c
   637  00FFD8  EC77  F07F         	call	___awdiv	;wreg free
   638  00FFDC  3801               	swapf	?___awdiv,w,c
   639  00FFDE  0BF0               	andlw	240
   640  00FFE0  100F               	iorwf	??_bcdU,w,c
   641  00FFE2  6E15               	movwf	bcdU@display,c
   642                           
   643                           ;main.c: 132:     PORTD = display;
   644  00FFE4  C015  FF83         	movff	bcdU@display,3971	;volatile
   645                           
   646                           ;main.c: 134:     delay(del);
   647  00FFE8  C013  F001         	movff	bcdU@del,delay@ms
   648  00FFEC  C014  F002         	movff	bcdU@del+1,delay@ms+1
   649  00FFF0  EC6F  F07E         	call	_delay	;wreg free
   650                           
   651                           ;main.c: 136:     licznik ++;
   652  00FFF4  2A16               	incf	bcdU@licznik,f,c
   653  00FFF6                     l1152:
   654                           
   655                           ;main.c: 120:    while (!((PORTBbits.RB3 == 0) || (PORTBbits.RB4 == 0)))
   656  00FFF6  A681               	btfss	3969,3,c	;volatile
   657  00FFF8  0012               	return	
   658  00FFFA  A881               	btfss	3969,4,c	;volatile
   659  00FFFC  0012               	return	
   660  00FFFE  D7BC               	goto	l1136
   661  010000                     __end_of_bcdU:
   662                           	opt callstack 0
   663                           
   664 ;; *************** function _delay *****************
   665 ;; Defined at:
   666 ;;		line 58 in file "main.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;  ms              2    0[COMRAM] unsigned int 
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  i               2    2[COMRAM] unsigned int 
   671 ;;  j               1    4[COMRAM] unsigned char 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, status,2, status,0
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;Total ram usage:        5 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; This function calls:
   688 ;;		Nothing
   689 ;; This function is called by:
   690 ;;		_greyU
   691 ;;		_bcdU
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           	psect	text5
   696  00FCDE                     __ptext5:
   697                           	opt callstack 0
   698  00FCDE                     _delay:
   699                           	opt callstack 28
   700                           
   701                           ;main.c: 58: void delay(unsigned int ms);main.c: 59: {;main.c: 60:     unsigned int i;;m
      +                          ain.c: 61:     unsigned char j;;main.c: 63:  for (i =0; i< ms; i++)
   702                           
   703                           ;incstack = 0
   704  00FCDE  0E00               	movlw	0
   705  00FCE0  6E04               	movwf	delay@i+1,c
   706  00FCE2  0E00               	movlw	0
   707  00FCE4  6E03               	movwf	delay@i,c
   708  00FCE6  D00D               	goto	l986
   709  00FCE8                     l974:
   710                           
   711                           ;main.c: 64:  {;main.c: 66:   for (j =0 ; j < 200; j++)
   712  00FCE8  0E00               	movlw	0
   713  00FCEA  6E05               	movwf	delay@j,c
   714  00FCEC                     l33:
   715                           
   716                           ;main.c: 67:    {;main.c: 68:       __nop();
   717  00FCEC  F000               	nop	
   718                           
   719                           ;main.c: 69:       __nop();
   720  00FCEE  F000               	nop	
   721                           
   722                           ;main.c: 70:       __nop();
   723  00FCF0  F000               	nop	
   724                           
   725                           ;main.c: 71:       __nop();
   726  00FCF2  F000               	nop	
   727                           
   728                           ;main.c: 72:       __nop();
   729  00FCF4  F000               	nop	
   730                           
   731                           ;main.c: 73:    }
   732  00FCF6  2A05               	incf	delay@j,f,c
   733  00FCF8  0EC7               	movlw	199
   734  00FCFA  6405               	cpfsgt	delay@j,c
   735  00FCFC  D7F7               	goto	l33
   736                           
   737                           ;main.c: 74:  }
   738  00FCFE  4A03               	infsnz	delay@i,f,c
   739  00FD00  2A04               	incf	delay@i+1,f,c
   740  00FD02                     l986:
   741  00FD02  5001               	movf	delay@ms,w,c
   742  00FD04  5C03               	subwf	delay@i,w,c
   743  00FD06  5002               	movf	delay@ms+1,w,c
   744  00FD08  5804               	subwfb	delay@i+1,w,c
   745  00FD0A  B0D8               	btfsc	status,0,c
   746  00FD0C  0012               	return	
   747  00FD0E  D7EC               	goto	l974
   748  00FD10                     __end_of_delay:
   749                           	opt callstack 0
   750                           
   751 ;; *************** function _adc *****************
   752 ;; Defined at:
   753 ;;		line 76 in file "main.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;  kanal           1    wreg     unsigned char 
   756 ;; Auto vars:     Size  Location     Type
   757 ;;  kanal           1    6[COMRAM] unsigned char 
   758 ;; Return value:  Size  Location     Type
   759 ;;                  2    0[COMRAM] unsigned int 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   767 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   770 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   771 ;;Total ram usage:        7 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_greyU
   777 ;;		_bcdU
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           	psect	text6
   782  00FDAE                     __ptext6:
   783                           	opt callstack 0
   784  00FDAE                     _adc:
   785                           	opt callstack 28
   786                           
   787                           ;incstack = 0
   788                           ;adc@kanal stored from wreg
   789  00FDAE  6E07               	movwf	adc@kanal,c
   790                           
   791                           ;main.c: 76: unsigned int adc(unsigned char kanal);main.c: 77: {;main.c: 78:     switch(
      +                          kanal)
   792  00FDB0  D007               	goto	l998
   793  00FDB2                     l990:
   794  00FDB2  0E01               	movlw	1
   795  00FDB4  D003               	goto	L3
   796  00FDB6                     l992:
   797  00FDB6  0E05               	movlw	5
   798  00FDB8  D001               	goto	L3
   799  00FDBA                     l994:
   800  00FDBA  0E09               	movlw	9
   801  00FDBC                     L3:
   802  00FDBC  6EC2               	movwf	4034,c	;volatile
   803  00FDBE  D011               	goto	l41
   804  00FDC0                     l998:
   805  00FDC0  5007               	movf	adc@kanal,w,c
   806  00FDC2  6E03               	movwf	??_adc& (0+255),c
   807  00FDC4  6A04               	clrf	(??_adc+1)& (0+255),c
   808                           
   809                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   810                           ; Switch size 1, requested type "simple"
   811                           ; Number of cases is 1, Range of values is 0 to 0
   812                           ; switch strategies available:
   813                           ; Name         Instructions Cycles
   814                           ; simple_byte            4     3 (average)
   815                           ;	Chosen strategy is simple_byte
   816  00FDC6  5004               	movf	??_adc+1,w,c
   817  00FDC8  0A00               	xorlw	0	; case 0
   818  00FDCA  A4D8               	btfss	status,2,c
   819  00FDCC  D00A               	goto	l41
   820                           
   821                           ; Switch size 1, requested type "simple"
   822                           ; Number of cases is 3, Range of values is 0 to 2
   823                           ; switch strategies available:
   824                           ; Name         Instructions Cycles
   825                           ; simple_byte           10     6 (average)
   826                           ;	Chosen strategy is simple_byte
   827  00FDCE  5003               	movf	??_adc,w,c
   828  00FDD0  0A00               	xorlw	0	; case 0
   829  00FDD2  B4D8               	btfsc	status,2,c
   830  00FDD4  D7EE               	goto	l990
   831  00FDD6  0A01               	xorlw	1	; case 1
   832  00FDD8  B4D8               	btfsc	status,2,c
   833  00FDDA  D7ED               	goto	l992
   834  00FDDC  0A03               	xorlw	3	; case 2
   835  00FDDE  B4D8               	btfsc	status,2,c
   836  00FDE0  D7EC               	goto	l994
   837  00FDE2                     l41:
   838                           
   839                           ;main.c: 85:     ADCON0bits.GO=1;
   840  00FDE2  82C2               	bsf	4034,1,c	;volatile
   841  00FDE4                     l44:
   842  00FDE4  B2C2               	btfsc	4034,1,c	;volatile
   843  00FDE6  D7FE               	goto	l44
   844                           
   845                           ;main.c: 88:    return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
   846  00FDE8  CFC3 F003          	movff	4035,??_adc	;volatile
   847  00FDEC  0E06               	movlw	6
   848  00FDEE  6E04               	movwf	(??_adc+1)& (0+255),c
   849  00FDF0                     u345:
   850  00FDF0  90D8               	bcf	status,0,c
   851  00FDF2  3203               	rrcf	??_adc,f,c
   852  00FDF4  2E04               	decfsz	(??_adc+1)& (0+255),f,c
   853  00FDF6  D7FC               	goto	u345
   854  00FDF8  5003               	movf	??_adc,w,c
   855  00FDFA  CFC4 F005          	movff	4036,??_adc+2	;volatile
   856  00FDFE  6A06               	clrf	(??_adc+3)& (0+255),c
   857  00FE00  90D8               	bcf	status,0,c
   858  00FE02  3605               	rlcf	??_adc+2,f,c
   859  00FE04  3606               	rlcf	??_adc+3,f,c
   860  00FE06  90D8               	bcf	status,0,c
   861  00FE08  3605               	rlcf	??_adc+2,f,c
   862  00FE0A  3606               	rlcf	??_adc+3,f,c
   863  00FE0C  1005               	iorwf	??_adc+2,w,c
   864  00FE0E  6E01               	movwf	?_adc,c
   865  00FE10  5006               	movf	??_adc+3,w,c
   866  00FE12  6E02               	movwf	?_adc+1,c
   867  00FE14  0012               	return		;funcret
   868  00FE16                     __end_of_adc:
   869                           	opt callstack 0
   870                           
   871 ;; *************** function ___lwdiv *****************
   872 ;; Defined at:
   873 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  dividend        2    7[COMRAM] unsigned int 
   876 ;;  divisor         2    9[COMRAM] unsigned int 
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  quotient        2   11[COMRAM] unsigned int 
   879 ;;  counter         1   13[COMRAM] unsigned char 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  2    7[COMRAM] unsigned int 
   882 ;; Registers used:
   883 ;;		wreg, status,2, status,0
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   889 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;Total ram usage:        7 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_greyU
   899 ;;		_bcdU
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text7
   904  00FD5C                     __ptext7:
   905                           	opt callstack 0
   906  00FD5C                     ___lwdiv:
   907                           	opt callstack 28
   908                           
   909                           ;incstack = 0
   910  00FD5C  0E00               	movlw	0
   911  00FD5E  6E0D               	movwf	___lwdiv@quotient+1,c
   912  00FD60  0E00               	movlw	0
   913  00FD62  6E0C               	movwf	___lwdiv@quotient,c
   914  00FD64  500A               	movf	___lwdiv@divisor,w,c
   915  00FD66  100B               	iorwf	___lwdiv@divisor+1,w,c
   916  00FD68  B4D8               	btfsc	status,2,c
   917  00FD6A  D01C               	goto	l574
   918  00FD6C  0E01               	movlw	1
   919  00FD6E  6E0E               	movwf	___lwdiv@counter,c
   920  00FD70  D004               	goto	l1102
   921  00FD72                     l1100:
   922  00FD72  90D8               	bcf	status,0,c
   923  00FD74  360A               	rlcf	___lwdiv@divisor,f,c
   924  00FD76  360B               	rlcf	___lwdiv@divisor+1,f,c
   925  00FD78  2A0E               	incf	___lwdiv@counter,f,c
   926  00FD7A                     l1102:
   927  00FD7A  AE0B               	btfss	___lwdiv@divisor+1,7,c
   928  00FD7C  D7FA               	goto	l1100
   929  00FD7E                     u480:
   930  00FD7E  90D8               	bcf	status,0,c
   931  00FD80  360C               	rlcf	___lwdiv@quotient,f,c
   932  00FD82  360D               	rlcf	___lwdiv@quotient+1,f,c
   933  00FD84  500A               	movf	___lwdiv@divisor,w,c
   934  00FD86  5C08               	subwf	___lwdiv@dividend,w,c
   935  00FD88  500B               	movf	___lwdiv@divisor+1,w,c
   936  00FD8A  5809               	subwfb	___lwdiv@dividend+1,w,c
   937  00FD8C  A0D8               	btfss	status,0,c
   938  00FD8E  D005               	goto	l1112
   939  00FD90  500A               	movf	___lwdiv@divisor,w,c
   940  00FD92  5E08               	subwf	___lwdiv@dividend,f,c
   941  00FD94  500B               	movf	___lwdiv@divisor+1,w,c
   942  00FD96  5A09               	subwfb	___lwdiv@dividend+1,f,c
   943  00FD98  800C               	bsf	___lwdiv@quotient,0,c
   944  00FD9A                     l1112:
   945  00FD9A  90D8               	bcf	status,0,c
   946  00FD9C  320B               	rrcf	___lwdiv@divisor+1,f,c
   947  00FD9E  320A               	rrcf	___lwdiv@divisor,f,c
   948  00FDA0  2E0E               	decfsz	___lwdiv@counter,f,c
   949  00FDA2  D7ED               	goto	u480
   950  00FDA4                     l574:
   951  00FDA4  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
   952  00FDA8  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
   953  00FDAC  0012               	return		;funcret
   954  00FDAE                     __end_of___lwdiv:
   955                           	opt callstack 0
   956                           
   957 ;; *************** function ___awmod *****************
   958 ;; Defined at:
   959 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  dividend        2    0[COMRAM] int 
   962 ;;  divisor         2    2[COMRAM] int 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  sign            1    5[COMRAM] unsigned char 
   965 ;;  counter         1    4[COMRAM] unsigned char 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  2    0[COMRAM] int 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   975 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;Total ram usage:        6 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_bcdU
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text8
   989  00FE7E                     __ptext8:
   990                           	opt callstack 0
   991  00FE7E                     ___awmod:
   992                           	opt callstack 28
   993                           
   994                           ;incstack = 0
   995  00FE7E  0E00               	movlw	0
   996  00FE80  6E06               	movwf	___awmod@sign,c
   997  00FE82  AE02               	btfss	___awmod@dividend+1,7,c
   998  00FE84  D006               	goto	l1066
   999  00FE86  6C01               	negf	___awmod@dividend,c
  1000  00FE88  1E02               	comf	___awmod@dividend+1,f,c
  1001  00FE8A  B0D8               	btfsc	status,0,c
  1002  00FE8C  2A02               	incf	___awmod@dividend+1,f,c
  1003  00FE8E  0E01               	movlw	1
  1004  00FE90  6E06               	movwf	___awmod@sign,c
  1005  00FE92                     l1066:
  1006  00FE92  AE04               	btfss	___awmod@divisor+1,7,c
  1007  00FE94  D004               	goto	l1070
  1008  00FE96  6C03               	negf	___awmod@divisor,c
  1009  00FE98  1E04               	comf	___awmod@divisor+1,f,c
  1010  00FE9A  B0D8               	btfsc	status,0,c
  1011  00FE9C  2A04               	incf	___awmod@divisor+1,f,c
  1012  00FE9E                     l1070:
  1013  00FE9E  5003               	movf	___awmod@divisor,w,c
  1014  00FEA0  1004               	iorwf	___awmod@divisor+1,w,c
  1015  00FEA2  B4D8               	btfsc	status,2,c
  1016  00FEA4  D018               	goto	l1086
  1017  00FEA6  0E01               	movlw	1
  1018  00FEA8  6E05               	movwf	___awmod@counter,c
  1019  00FEAA  D004               	goto	l1076
  1020  00FEAC                     l1074:
  1021  00FEAC  90D8               	bcf	status,0,c
  1022  00FEAE  3603               	rlcf	___awmod@divisor,f,c
  1023  00FEB0  3604               	rlcf	___awmod@divisor+1,f,c
  1024  00FEB2  2A05               	incf	___awmod@counter,f,c
  1025  00FEB4                     l1076:
  1026  00FEB4  AE04               	btfss	___awmod@divisor+1,7,c
  1027  00FEB6  D7FA               	goto	l1074
  1028  00FEB8                     u440:
  1029  00FEB8  5003               	movf	___awmod@divisor,w,c
  1030  00FEBA  5C01               	subwf	___awmod@dividend,w,c
  1031  00FEBC  5004               	movf	___awmod@divisor+1,w,c
  1032  00FEBE  5802               	subwfb	___awmod@dividend+1,w,c
  1033  00FEC0  A0D8               	btfss	status,0,c
  1034  00FEC2  D004               	goto	l1082
  1035  00FEC4  5003               	movf	___awmod@divisor,w,c
  1036  00FEC6  5E01               	subwf	___awmod@dividend,f,c
  1037  00FEC8  5004               	movf	___awmod@divisor+1,w,c
  1038  00FECA  5A02               	subwfb	___awmod@dividend+1,f,c
  1039  00FECC                     l1082:
  1040  00FECC  90D8               	bcf	status,0,c
  1041  00FECE  3204               	rrcf	___awmod@divisor+1,f,c
  1042  00FED0  3203               	rrcf	___awmod@divisor,f,c
  1043  00FED2  2E05               	decfsz	___awmod@counter,f,c
  1044  00FED4  D7F1               	goto	u440
  1045  00FED6                     l1086:
  1046  00FED6  5006               	movf	___awmod@sign,w,c
  1047  00FED8  B4D8               	btfsc	status,2,c
  1048  00FEDA  D004               	goto	l1090
  1049  00FEDC  6C01               	negf	___awmod@dividend,c
  1050  00FEDE  1E02               	comf	___awmod@dividend+1,f,c
  1051  00FEE0  B0D8               	btfsc	status,0,c
  1052  00FEE2  2A02               	incf	___awmod@dividend+1,f,c
  1053  00FEE4                     l1090:
  1054  00FEE4  C001  F001         	movff	___awmod@dividend,?___awmod
  1055  00FEE8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1056  00FEEC  0012               	return		;funcret
  1057  00FEEE                     __end_of___awmod:
  1058                           	opt callstack 0
  1059                           
  1060 ;; *************** function ___awdiv *****************
  1061 ;; Defined at:
  1062 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  dividend        2    0[COMRAM] int 
  1065 ;;  divisor         2    2[COMRAM] int 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  quotient        2    6[COMRAM] int 
  1068 ;;  sign            1    5[COMRAM] unsigned char 
  1069 ;;  counter         1    4[COMRAM] unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  2    0[COMRAM] int 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1079 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1083 ;;Total ram usage:        8 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_bcdU
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text9
  1093  00FEEE                     __ptext9:
  1094                           	opt callstack 0
  1095  00FEEE                     ___awdiv:
  1096                           	opt callstack 28
  1097                           
  1098                           ;incstack = 0
  1099  00FEEE  0E00               	movlw	0
  1100  00FEF0  6E06               	movwf	___awdiv@sign,c
  1101  00FEF2  AE04               	btfss	___awdiv@divisor+1,7,c
  1102  00FEF4  D006               	goto	l1022
  1103  00FEF6  6C03               	negf	___awdiv@divisor,c
  1104  00FEF8  1E04               	comf	___awdiv@divisor+1,f,c
  1105  00FEFA  B0D8               	btfsc	status,0,c
  1106  00FEFC  2A04               	incf	___awdiv@divisor+1,f,c
  1107  00FEFE  0E01               	movlw	1
  1108  00FF00  6E06               	movwf	___awdiv@sign,c
  1109  00FF02                     l1022:
  1110  00FF02  AE02               	btfss	___awdiv@dividend+1,7,c
  1111  00FF04  D006               	goto	l1028
  1112  00FF06  6C01               	negf	___awdiv@dividend,c
  1113  00FF08  1E02               	comf	___awdiv@dividend+1,f,c
  1114  00FF0A  B0D8               	btfsc	status,0,c
  1115  00FF0C  2A02               	incf	___awdiv@dividend+1,f,c
  1116  00FF0E  0E01               	movlw	1
  1117  00FF10  1A06               	xorwf	___awdiv@sign,f,c
  1118  00FF12                     l1028:
  1119  00FF12  0E00               	movlw	0
  1120  00FF14  6E08               	movwf	___awdiv@quotient+1,c
  1121  00FF16  0E00               	movlw	0
  1122  00FF18  6E07               	movwf	___awdiv@quotient,c
  1123  00FF1A  5003               	movf	___awdiv@divisor,w,c
  1124  00FF1C  1004               	iorwf	___awdiv@divisor+1,w,c
  1125  00FF1E  B4D8               	btfsc	status,2,c
  1126  00FF20  D01C               	goto	l1050
  1127  00FF22  0E01               	movlw	1
  1128  00FF24  6E05               	movwf	___awdiv@counter,c
  1129  00FF26  D004               	goto	l1036
  1130  00FF28                     l1034:
  1131  00FF28  90D8               	bcf	status,0,c
  1132  00FF2A  3603               	rlcf	___awdiv@divisor,f,c
  1133  00FF2C  3604               	rlcf	___awdiv@divisor+1,f,c
  1134  00FF2E  2A05               	incf	___awdiv@counter,f,c
  1135  00FF30                     l1036:
  1136  00FF30  AE04               	btfss	___awdiv@divisor+1,7,c
  1137  00FF32  D7FA               	goto	l1034
  1138  00FF34                     u380:
  1139  00FF34  90D8               	bcf	status,0,c
  1140  00FF36  3607               	rlcf	___awdiv@quotient,f,c
  1141  00FF38  3608               	rlcf	___awdiv@quotient+1,f,c
  1142  00FF3A  5003               	movf	___awdiv@divisor,w,c
  1143  00FF3C  5C01               	subwf	___awdiv@dividend,w,c
  1144  00FF3E  5004               	movf	___awdiv@divisor+1,w,c
  1145  00FF40  5802               	subwfb	___awdiv@dividend+1,w,c
  1146  00FF42  A0D8               	btfss	status,0,c
  1147  00FF44  D005               	goto	l1046
  1148  00FF46  5003               	movf	___awdiv@divisor,w,c
  1149  00FF48  5E01               	subwf	___awdiv@dividend,f,c
  1150  00FF4A  5004               	movf	___awdiv@divisor+1,w,c
  1151  00FF4C  5A02               	subwfb	___awdiv@dividend+1,f,c
  1152  00FF4E  8007               	bsf	___awdiv@quotient,0,c
  1153  00FF50                     l1046:
  1154  00FF50  90D8               	bcf	status,0,c
  1155  00FF52  3204               	rrcf	___awdiv@divisor+1,f,c
  1156  00FF54  3203               	rrcf	___awdiv@divisor,f,c
  1157  00FF56  2E05               	decfsz	___awdiv@counter,f,c
  1158  00FF58  D7ED               	goto	u380
  1159  00FF5A                     l1050:
  1160  00FF5A  5006               	movf	___awdiv@sign,w,c
  1161  00FF5C  B4D8               	btfsc	status,2,c
  1162  00FF5E  D004               	goto	l1054
  1163  00FF60  6C07               	negf	___awdiv@quotient,c
  1164  00FF62  1E08               	comf	___awdiv@quotient+1,f,c
  1165  00FF64  B0D8               	btfsc	status,0,c
  1166  00FF66  2A08               	incf	___awdiv@quotient+1,f,c
  1167  00FF68                     l1054:
  1168  00FF68  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1169  00FF6C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1170  00FF70  0012               	return		;funcret
  1171  00FF72                     __end_of___awdiv:
  1172                           	opt callstack 0
  1173  0000                     
  1174                           	psect	rparam
  1175  0000                     tosu	equ	0xFFF
  1176                           tosh	equ	0xFFE
  1177                           tosl	equ	0xFFD
  1178                           stkptr	equ	0xFFC
  1179                           pclatu	equ	0xFFB
  1180                           pclath	equ	0xFFA
  1181                           pcl	equ	0xFF9
  1182                           tblptru	equ	0xFF8
  1183                           tblptrh	equ	0xFF7
  1184                           tblptrl	equ	0xFF6
  1185                           tablat	equ	0xFF5
  1186                           prodh	equ	0xFF4
  1187                           prodl	equ	0xFF3
  1188                           indf0	equ	0xFEF
  1189                           postinc0	equ	0xFEE
  1190                           postdec0	equ	0xFED
  1191                           preinc0	equ	0xFEC
  1192                           plusw0	equ	0xFEB
  1193                           fsr0h	equ	0xFEA
  1194                           fsr0l	equ	0xFE9
  1195                           wreg	equ	0xFE8
  1196                           indf1	equ	0xFE7
  1197                           postinc1	equ	0xFE6
  1198                           postdec1	equ	0xFE5
  1199                           preinc1	equ	0xFE4
  1200                           plusw1	equ	0xFE3
  1201                           fsr1h	equ	0xFE2
  1202                           fsr1l	equ	0xFE1
  1203                           bsr	equ	0xFE0
  1204                           indf2	equ	0xFDF
  1205                           postinc2	equ	0xFDE
  1206                           postdec2	equ	0xFDD
  1207                           preinc2	equ	0xFDC
  1208                           plusw2	equ	0xFDB
  1209                           fsr2h	equ	0xFDA
  1210                           fsr2l	equ	0xFD9
  1211                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     24      24
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_setup
    _setup->_bcdU
    _greyU->___lwdiv
    _bcdU->___lwdiv
    ___lwdiv->_adc

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3045
                                             23 COMRAM     1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0    2974
                                             22 COMRAM     1     1      0
                               _bcdU
                              _greyU
 ---------------------------------------------------------------------------------
 (2) _greyU                                                6     6      0    1159
                                             14 COMRAM     6     6      0
                            ___lwdiv
                             ___wmul
                                _adc
                              _delay
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _bcdU                                                 8     8      0    1771
                                             14 COMRAM     8     8      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                                _adc
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                5     3      2     244
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _adc                                                  7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              7 COMRAM     7     3      4
                                _adc (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _bcdU
       ___awdiv
       ___awmod
       ___lwdiv
         _adc (ARG)
       _adc
       _delay
     _greyU
       ___lwdiv
         _adc (ARG)
       ___wmul
       _adc
       _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     18      18       1       18.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun May 17 18:12:00 2020

                     l41 FDE2                       l33 FCEC                       l44 FDE4  
                     l75 FD42             ___awdiv@sign 0006      ___wmul@multiplicand 0003  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l574 FDA4  
                    l990 FDB2                      l974 FCE8                      l992 FDB6  
                    l994 FDBA                      l986 FD02                      l998 FDC0  
           __CFG_CPB$OFF 000000                      u440 FEB8                      u345 FDF0  
           __CFG_CPD$OFF 000000                      u380 FF34                      u480 FD7E  
                    _adc FDAE             ___awmod@sign 0006             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     ?_adc 0001                     l1100 FD72  
                   l1022 FF02                     l1102 FD7A                     l1112 FD9A  
                   l1034 FF28                     l1050 FF5A                     l1130 FE74  
                   l1036 FF30                     l1028 FF12                     l1054 FF68  
                   l1046 FF50                     l1070 FE9E                     l1118 FE1C  
                   l1144 FFB0                     l1136 FF78                     l1152 FFF6  
                   l1090 FEE4                     l1082 FECC                     l1074 FEAC  
                   l1066 FE92                     l1076 FEB4                     l1086 FED6  
                   l1174 FD46                     l1166 FD34                     l1178 FD52  
           __CFG_PWRT$ON 000000                     _bcdU FF72                     _main FD10  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ??_adc 0003                    ?_bcdU 0001                    ?_main 0001  
        __end_of___awdiv FF72          __end_of___awmod FEEE          ___awdiv@divisor 0003  
        __end_of___lwdiv FDAE          ___awdiv@counter 0005                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _delay FCDE                    _greyU FE16                    _setup FCA2  
         __CFG_BOREN$OFF 000000                    status 000FD8          __initialization FC98  
           __end_of_bcdU 0000             __end_of_main FD5C           __CFG_OSC$HSPLL 000000  
                 ??_bcdU 000F                   ??_main 0018            __activetblptr 000002  
                 ?_delay 0001                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   ?_greyU 0001                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 0001                   ?_setup 0001  
         __CFG_XINST$OFF 000000                   ___wmul FCB8                ??___awdiv 0005  
              ??___awmod 0005                ??___lwdiv 000C                   delay@i 0003  
                 delay@j 0005         ___awdiv@quotient 0007          ___awmod@divisor 0003  
        ___awmod@counter 0005                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization FC98          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001            __end_of_delay FD10            __end_of_greyU FE7E  
          __end_of_setup FCB8             greyU@display 0013             greyU@licznik 0014  
                ??_delay 0003                  ??_greyU 000F                  ??_setup 0017  
                ?___wmul 0001                  __Hparam 0000                  __Lparam 0000  
                ___awdiv FEEE                  ___awmod FE7E          __size_of___wmul 0026  
                bcdU@del 0013                  ___lwdiv FD5C                  bcdU@tmp 0011  
        __CFG_STVREN$OFF 000000                  __pcinit FC98                  __ramtop 1000  
                __ptext0 FD10                  __ptext1 FCA2                  __ptext2 FE16  
                __ptext3 FCB8                  __ptext4 FF72                  __ptext5 FCDE  
                __ptext6 FDAE                  __ptext7 FD5C                  __ptext8 FE7E  
                __ptext9 FEEE             __size_of_adc 0068                  delay@ms 0001  
       ___awmod@dividend 0001     end_of_initialization FC98            __Lmediumconst 0000  
              _PORTBbits 000F81               main@button 0018           __end_of___wmul FCDE  
            bcdU@display 0015              bcdU@licznik 0016      start_initialization FC98  
            __end_of_adc FE16                 ??___wmul 0005         __CFG_LPT1OSC$OFF 000000  
       ___lwdiv@dividend 0008        __CFG_CCP2MX$PORTC 000000                 ?___awdiv 0001  
               ?___awmod 0001                 ?___lwdiv 0008         ___lwdiv@quotient 000C  
         __size_of_delay 0032           __size_of_greyU 0068           __size_of_setup 0016  
         ___wmul@product 0005         __CFG_WDTPS$32768 000000               setup@input 0017  
             _ADCON0bits 000FC2        ___wmul@multiplier 0001                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awdiv 0084         __size_of___awmod 0070  
       __size_of___lwdiv 0052                 adc@kanal 0007          ___lwdiv@divisor 000A  
        ___lwdiv@counter 000E            __size_of_bcdU 008E            __size_of_main 004C  
               greyU@del 0011                 greyU@tmp 000F  
