

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon May 18 20:29:41 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 2.05
    15                           ; Generated 20/12/2018 GMT
    16                           ; 
    17                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4620 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _PORTBbits	set	3969
    49  0000                     _TRISE	set	3990
    50  0000                     _TRISD	set	3989
    51  0000                     _TRISC	set	3988
    52  0000                     _TRISB	set	3987
    53  0000                     _TRISA	set	3986
    54  0000                     _ADCON2	set	4032
    55  0000                     _ADCON1	set	4033
    56  0000                     _PORTEbits	set	3972
    57  0000                     _PORTD	set	3971
    58  0000                     _ADRESL	set	4035
    59  0000                     _ADRESH	set	4036
    60  0000                     _ADCON0bits	set	4034
    61  0000                     _ADCON0	set	4034
    62                           
    63                           ; #config settings
    64  0000                     
    65                           	psect	cinit
    66  00FE2C                     __pcinit:
    67                           	opt callstack 0
    68  00FE2C                     start_initialization:
    69                           	opt callstack 0
    70  00FE2C                     __initialization:
    71                           	opt callstack 0
    72  00FE2C                     end_of_initialization:
    73                           	opt callstack 0
    74  00FE2C                     __end_of__initialization:
    75                           	opt callstack 0
    76  00FE2C  0E00               	movlw	low (__Lmediumconst shr (0+16))
    77  00FE2E  6EF8               	movwf	tblptru,c
    78  00FE30  0100               	movlb	0
    79  00FE32  EF91  F07F         	goto	_main	;jump to C main() function
    80                           
    81                           	psect	cstackCOMRAM
    82  000001                     __pcstackCOMRAM:
    83                           	opt callstack 0
    84  000001                     ?_adc:
    85                           	opt callstack 0
    86  000001                     delay@ms:
    87                           	opt callstack 0
    88                           
    89                           ; 2 bytes @ 0x0
    90  000001                     	ds	2
    91  000003                     ??_adc:
    92  000003                     delay@i:
    93                           	opt callstack 0
    94                           
    95                           ; 2 bytes @ 0x2
    96  000003                     	ds	2
    97  000005                     delay@j:
    98                           	opt callstack 0
    99                           
   100                           ; 1 bytes @ 0x4
   101  000005                     	ds	2
   102  000007                     adc@kanal:
   103                           	opt callstack 0
   104                           
   105                           ; 1 bytes @ 0x6
   106  000007                     	ds	1
   107  000008                     ?___lwdiv:
   108                           	opt callstack 0
   109  000008                     ___lwdiv@dividend:
   110                           	opt callstack 0
   111                           
   112                           ; 2 bytes @ 0x7
   113  000008                     	ds	2
   114  00000A                     ___lwdiv@divisor:
   115                           	opt callstack 0
   116                           
   117                           ; 2 bytes @ 0x9
   118  00000A                     	ds	2
   119  00000C                     ___lwdiv@quotient:
   120                           	opt callstack 0
   121                           
   122                           ; 2 bytes @ 0xB
   123  00000C                     	ds	2
   124  00000E                     ___lwdiv@counter:
   125                           	opt callstack 0
   126                           
   127                           ; 1 bytes @ 0xD
   128  00000E                     	ds	1
   129  00000F                     main@display:
   130                           	opt callstack 0
   131                           
   132                           ; 1 bytes @ 0xE
   133  00000F                     	ds	1
   134  000010                     main@i:
   135                           	opt callstack 0
   136                           
   137                           ; 2 bytes @ 0xF
   138  000010                     	ds	2
   139  000012                     main@tmp:
   140                           	opt callstack 0
   141                           
   142                           ; 2 bytes @ 0x11
   143  000012                     	ds	2
   144                           
   145 ;;
   146 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   147 ;;
   148 ;; *************** function _main *****************
   149 ;; Defined at:
   150 ;;		line 163 in file "main.c"
   151 ;; Parameters:    Size  Location     Type
   152 ;;		None
   153 ;; Auto vars:     Size  Location     Type
   154 ;;  i               2   15[COMRAM] int 
   155 ;;  tmp             2   17[COMRAM] unsigned int 
   156 ;;  display         1   14[COMRAM] unsigned char 
   157 ;; Return value:  Size  Location     Type
   158 ;;                  1    wreg      void 
   159 ;; Registers used:
   160 ;;		wreg, status,2, status,0, cstack
   161 ;; Tracked objects:
   162 ;;		On entry : 0/0
   163 ;;		On exit  : 0/0
   164 ;;		Unchanged: 0/0
   165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   167 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   169 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   170 ;;Total ram usage:        5 bytes
   171 ;; Hardware stack levels required when called:    1
   172 ;; This function calls:
   173 ;;		___lwdiv
   174 ;;		_adc
   175 ;;		_delay
   176 ;; This function is called by:
   177 ;;		Startup code after reset
   178 ;; This function uses a non-reentrant model
   179 ;;
   180                           
   181                           	psect	text0
   182  00FF22                     __ptext0:
   183                           	opt callstack 0
   184  00FF22                     _main:
   185                           	opt callstack 30
   186                           
   187                           ;main.c: 166:     ADCON0=0x01;
   188                           
   189                           ;incstack = 0
   190  00FF22  0E01               	movlw	1
   191  00FF24  6EC2               	movwf	4034,c	;volatile
   192                           
   193                           ;main.c: 167:     ADCON1=0x0B;
   194  00FF26  0E0B               	movlw	11
   195  00FF28  6EC1               	movwf	4033,c	;volatile
   196                           
   197                           ;main.c: 168:     ADCON2=0x01;
   198  00FF2A  0E01               	movlw	1
   199  00FF2C  6EC0               	movwf	4032,c	;volatile
   200                           
   201                           ;main.c: 170:     TRISA=0xC3;
   202  00FF2E  0EC3               	movlw	195
   203  00FF30  6E92               	movwf	3986,c	;volatile
   204                           
   205                           ;main.c: 171:     TRISB=0x3F;
   206  00FF32  0E3F               	movlw	63
   207  00FF34  6E93               	movwf	3987,c	;volatile
   208                           
   209                           ;main.c: 172:     TRISC=0x01;
   210  00FF36  0E01               	movlw	1
   211  00FF38  6E94               	movwf	3988,c	;volatile
   212                           
   213                           ;main.c: 173:     TRISD=0x00;
   214  00FF3A  0E00               	movlw	0
   215  00FF3C  6E95               	movwf	3989,c	;volatile
   216                           
   217                           ;main.c: 174:     TRISE=0x00;
   218  00FF3E  0E00               	movlw	0
   219  00FF40  6E96               	movwf	3990,c	;volatile
   220                           
   221                           ;main.c: 178:     unsigned int tmp = 0;
   222  00FF42  0E00               	movlw	0
   223  00FF44  6E13               	movwf	main@tmp+1,c
   224  00FF46  0E00               	movlw	0
   225  00FF48  6E12               	movwf	main@tmp,c
   226  00FF4A                     l72:
   227                           
   228                           ;main.c: 181:     {;main.c: 182:          PORTD=0;
   229  00FF4A  0E00               	movlw	0
   230  00FF4C  6E83               	movwf	3971,c	;volatile
   231                           
   232                           ;main.c: 184:         tmp=((unsigned int)adc(0) / 10);
   233  00FF4E  0E00               	movlw	0
   234  00FF50  EC5D  F07F         	call	_adc
   235  00FF54  C001  F008         	movff	?_adc,___lwdiv@dividend
   236  00FF58  C002  F009         	movff	?_adc+1,___lwdiv@dividend+1
   237  00FF5C  0E00               	movlw	0
   238  00FF5E  6E0B               	movwf	___lwdiv@divisor+1,c
   239  00FF60  0E0A               	movlw	10
   240  00FF62  6E0A               	movwf	___lwdiv@divisor,c
   241  00FF64  EC34  F07F         	call	___lwdiv	;wreg free
   242  00FF68  C008  F012         	movff	?___lwdiv,main@tmp
   243  00FF6C  C009  F013         	movff	?___lwdiv+1,main@tmp+1
   244                           
   245                           ;main.c: 185:         display = (unsigned char)(tmp);
   246  00FF70  C012  F00F         	movff	main@tmp,main@display
   247                           
   248                           ;main.c: 186:         delay(500);
   249  00FF74  0E01               	movlw	1
   250  00FF76  6E02               	movwf	delay@ms+1,c
   251  00FF78  0EF4               	movlw	244
   252  00FF7A  6E01               	movwf	delay@ms,c
   253  00FF7C  EC1B  F07F         	call	_delay	;wreg free
   254                           
   255                           ;main.c: 188:         while(display > 50)
   256  00FF80  D03B               	goto	l1015
   257  00FF82                     l995:
   258                           
   259                           ;main.c: 189:         {;main.c: 190:             for(int i = 0; i < 5; i++)
   260  00FF82  0E00               	movlw	0
   261  00FF84  6E11               	movwf	main@i+1,c
   262  00FF86  0E00               	movlw	0
   263  00FF88  6E10               	movwf	main@i,c
   264  00FF8A                     l1001:
   265                           
   266                           ;main.c: 191:             {;main.c: 192:               PORTD=1;
   267  00FF8A  0E01               	movlw	1
   268  00FF8C  6E83               	movwf	3971,c	;volatile
   269                           
   270                           ;main.c: 193:               delay(500);
   271  00FF8E  0E01               	movlw	1
   272  00FF90  6E02               	movwf	delay@ms+1,c
   273  00FF92  0EF4               	movlw	244
   274  00FF94  6E01               	movwf	delay@ms,c
   275  00FF96  EC1B  F07F         	call	_delay	;wreg free
   276                           
   277                           ;main.c: 194:               PORTD=0;
   278  00FF9A  0E00               	movlw	0
   279  00FF9C  6E83               	movwf	3971,c	;volatile
   280                           
   281                           ;main.c: 195:               delay(500);
   282  00FF9E  0E01               	movlw	1
   283  00FFA0  6E02               	movwf	delay@ms+1,c
   284  00FFA2  0EF4               	movlw	244
   285  00FFA4  6E01               	movwf	delay@ms,c
   286  00FFA6  EC1B  F07F         	call	_delay	;wreg free
   287                           
   288                           ;main.c: 196:             }
   289  00FFAA  4A10               	infsnz	main@i,f,c
   290  00FFAC  2A11               	incf	main@i+1,f,c
   291  00FFAE  BE11               	btfsc	main@i+1,7,c
   292  00FFB0  D7EC               	goto	l1001
   293  00FFB2  5011               	movf	main@i+1,w,c
   294  00FFB4  E106               	bnz	l77
   295  00FFB6  0E05               	movlw	5
   296  00FFB8  5C10               	subwf	main@i,w,c
   297  00FFBA  B0D8               	btfsc	status,0,c
   298  00FFBC  D002               	goto	l77
   299  00FFBE  D7E5               	goto	l1001
   300  00FFC0                     l78:
   301                           
   302                           ;main.c: 198:             {;main.c: 199:                 PORTD=255;
   303  00FFC0  6883               	setf	3971,c	;volatile
   304  00FFC2                     l77:
   305                           
   306                           ;main.c: 197:             while(PORTBbits.RB3 != 0)
   307  00FFC2  B681               	btfsc	3969,3,c	;volatile
   308  00FFC4  D7FD               	goto	l78
   309                           
   310                           ;main.c: 202:         tmp=((unsigned int)adc(0) / 10);
   311  00FFC6  0E00               	movlw	0
   312  00FFC8  EC5D  F07F         	call	_adc
   313  00FFCC  C001  F008         	movff	?_adc,___lwdiv@dividend
   314  00FFD0  C002  F009         	movff	?_adc+1,___lwdiv@dividend+1
   315  00FFD4  0E00               	movlw	0
   316  00FFD6  6E0B               	movwf	___lwdiv@divisor+1,c
   317  00FFD8  0E0A               	movlw	10
   318  00FFDA  6E0A               	movwf	___lwdiv@divisor,c
   319  00FFDC  EC34  F07F         	call	___lwdiv	;wreg free
   320  00FFE0  C008  F012         	movff	?___lwdiv,main@tmp
   321  00FFE4  C009  F013         	movff	?___lwdiv+1,main@tmp+1
   322                           
   323                           ;main.c: 203:         display = (unsigned char)(tmp);
   324  00FFE8  C012  F00F         	movff	main@tmp,main@display
   325                           
   326                           ;main.c: 204:         delay(500);
   327  00FFEC  0E01               	movlw	1
   328  00FFEE  6E02               	movwf	delay@ms+1,c
   329  00FFF0  0EF4               	movlw	244
   330  00FFF2  6E01               	movwf	delay@ms,c
   331  00FFF4  EC1B  F07F         	call	_delay	;wreg free
   332  00FFF8                     l1015:
   333                           
   334                           ;main.c: 188:         while(display > 50)
   335  00FFF8  0E33               	movlw	51
   336  00FFFA  600F               	cpfslt	main@display,c
   337  00FFFC  D7C2               	goto	l995
   338  00FFFE  D7A5               	goto	l72
   339  010000                     __end_of_main:
   340                           	opt callstack 0
   341                           
   342 ;; *************** function _delay *****************
   343 ;; Defined at:
   344 ;;		line 72 in file "main.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;  ms              2    0[COMRAM] unsigned int 
   347 ;; Auto vars:     Size  Location     Type
   348 ;;  i               2    2[COMRAM] unsigned int 
   349 ;;  j               1    4[COMRAM] unsigned char 
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, status,2, status,0
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;Total ram usage:        5 bytes
   364 ;; Hardware stack levels used:    1
   365 ;; This function calls:
   366 ;;		Nothing
   367 ;; This function is called by:
   368 ;;		_main
   369 ;;		_lcd_init
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           	psect	text1
   374  00FE36                     __ptext1:
   375                           	opt callstack 0
   376  00FE36                     _delay:
   377                           	opt callstack 30
   378                           
   379                           ;main.c: 72: void delay(unsigned int ms);main.c: 73: {;main.c: 74:     unsigned int i;;m
      +                          ain.c: 75:     unsigned char j;;main.c: 77:  for (i =0; i< ms; i++)
   380                           
   381                           ;incstack = 0
   382  00FE36  0E00               	movlw	0
   383  00FE38  6E04               	movwf	delay@i+1,c
   384  00FE3A  0E00               	movlw	0
   385  00FE3C  6E03               	movwf	delay@i,c
   386  00FE3E  D00D               	goto	l919
   387  00FE40                     l907:
   388                           
   389                           ;main.c: 78:  {;main.c: 80:   for (j =0 ; j < 200; j++)
   390  00FE40  0E00               	movlw	0
   391  00FE42  6E05               	movwf	delay@j,c
   392  00FE44                     l35:
   393                           
   394                           ;main.c: 81:    {;main.c: 82:       __nop();
   395  00FE44  F000               	nop	
   396                           
   397                           ;main.c: 83:       __nop();
   398  00FE46  F000               	nop	
   399                           
   400                           ;main.c: 84:       __nop();
   401  00FE48  F000               	nop	
   402                           
   403                           ;main.c: 85:       __nop();
   404  00FE4A  F000               	nop	
   405                           
   406                           ;main.c: 86:       __nop();
   407  00FE4C  F000               	nop	
   408                           
   409                           ;main.c: 87:    }
   410  00FE4E  2A05               	incf	delay@j,f,c
   411  00FE50  0EC7               	movlw	199
   412  00FE52  6405               	cpfsgt	delay@j,c
   413  00FE54  D7F7               	goto	l35
   414                           
   415                           ;main.c: 88:  }
   416  00FE56  4A03               	infsnz	delay@i,f,c
   417  00FE58  2A04               	incf	delay@i+1,f,c
   418  00FE5A                     l919:
   419  00FE5A  5001               	movf	delay@ms,w,c
   420  00FE5C  5C03               	subwf	delay@i,w,c
   421  00FE5E  5002               	movf	delay@ms+1,w,c
   422  00FE60  5804               	subwfb	delay@i+1,w,c
   423  00FE62  B0D8               	btfsc	status,0,c
   424  00FE64  0012               	return	
   425  00FE66  D7EC               	goto	l907
   426  00FE68                     __end_of_delay:
   427                           	opt callstack 0
   428                           
   429 ;; *************** function _adc *****************
   430 ;; Defined at:
   431 ;;		line 91 in file "main.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;  kanal           1    wreg     unsigned char 
   434 ;; Auto vars:     Size  Location     Type
   435 ;;  kanal           1    6[COMRAM] unsigned char 
   436 ;; Return value:  Size  Location     Type
   437 ;;                  2    0[COMRAM] unsigned int 
   438 ;; Registers used:
   439 ;;		wreg, status,2, status,0
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   446 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;Total ram usage:        7 bytes
   450 ;; Hardware stack levels used:    1
   451 ;; This function calls:
   452 ;;		Nothing
   453 ;; This function is called by:
   454 ;;		_main
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           	psect	text2
   459  00FEBA                     __ptext2:
   460                           	opt callstack 0
   461  00FEBA                     _adc:
   462                           	opt callstack 30
   463                           
   464                           ;incstack = 0
   465                           ;adc@kanal stored from wreg
   466  00FEBA  6E07               	movwf	adc@kanal,c
   467                           
   468                           ;main.c: 91: unsigned int adc(unsigned char kanal);main.c: 92: {;main.c: 93:     switch(
      +                          kanal)
   469  00FEBC  D007               	goto	l931
   470  00FEBE                     l923:
   471  00FEBE  0E01               	movlw	1
   472  00FEC0  D003               	goto	L2
   473  00FEC2                     l925:
   474  00FEC2  0E05               	movlw	5
   475  00FEC4  D001               	goto	L2
   476  00FEC6                     l927:
   477  00FEC6  0E09               	movlw	9
   478  00FEC8                     L2:
   479  00FEC8  6EC2               	movwf	4034,c	;volatile
   480  00FECA  D011               	goto	l43
   481  00FECC                     l931:
   482  00FECC  5007               	movf	adc@kanal,w,c
   483  00FECE  6E03               	movwf	??_adc& (0+255),c
   484  00FED0  6A04               	clrf	(??_adc+1)& (0+255),c
   485                           
   486                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   487                           ; Switch size 1, requested type "simple"
   488                           ; Number of cases is 1, Range of values is 0 to 0
   489                           ; switch strategies available:
   490                           ; Name         Instructions Cycles
   491                           ; simple_byte            4     3 (average)
   492                           ;	Chosen strategy is simple_byte
   493  00FED2  5004               	movf	??_adc+1,w,c
   494  00FED4  0A00               	xorlw	0	; case 0
   495  00FED6  A4D8               	btfss	status,2,c
   496  00FED8  D00A               	goto	l43
   497                           
   498                           ; Switch size 1, requested type "simple"
   499                           ; Number of cases is 3, Range of values is 0 to 2
   500                           ; switch strategies available:
   501                           ; Name         Instructions Cycles
   502                           ; simple_byte           10     6 (average)
   503                           ;	Chosen strategy is simple_byte
   504  00FEDA  5003               	movf	??_adc,w,c
   505  00FEDC  0A00               	xorlw	0	; case 0
   506  00FEDE  B4D8               	btfsc	status,2,c
   507  00FEE0  D7EE               	goto	l923
   508  00FEE2  0A01               	xorlw	1	; case 1
   509  00FEE4  B4D8               	btfsc	status,2,c
   510  00FEE6  D7ED               	goto	l925
   511  00FEE8  0A03               	xorlw	3	; case 2
   512  00FEEA  B4D8               	btfsc	status,2,c
   513  00FEEC  D7EC               	goto	l927
   514  00FEEE                     l43:
   515                           
   516                           ;main.c: 100:     ADCON0bits.GO=1;
   517  00FEEE  82C2               	bsf	4034,1,c	;volatile
   518  00FEF0                     l46:
   519  00FEF0  B2C2               	btfsc	4034,1,c	;volatile
   520  00FEF2  D7FE               	goto	l46
   521                           
   522                           ;main.c: 103:    return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
   523  00FEF4  CFC3 F003          	movff	4035,??_adc	;volatile
   524  00FEF8  0E06               	movlw	6
   525  00FEFA  6E04               	movwf	(??_adc+1)& (0+255),c
   526  00FEFC                     u155:
   527  00FEFC  90D8               	bcf	status,0,c
   528  00FEFE  3203               	rrcf	??_adc,f,c
   529  00FF00  2E04               	decfsz	(??_adc+1)& (0+255),f,c
   530  00FF02  D7FC               	goto	u155
   531  00FF04  5003               	movf	??_adc,w,c
   532  00FF06  CFC4 F005          	movff	4036,??_adc+2	;volatile
   533  00FF0A  6A06               	clrf	(??_adc+3)& (0+255),c
   534  00FF0C  90D8               	bcf	status,0,c
   535  00FF0E  3605               	rlcf	??_adc+2,f,c
   536  00FF10  3606               	rlcf	??_adc+3,f,c
   537  00FF12  90D8               	bcf	status,0,c
   538  00FF14  3605               	rlcf	??_adc+2,f,c
   539  00FF16  3606               	rlcf	??_adc+3,f,c
   540  00FF18  1005               	iorwf	??_adc+2,w,c
   541  00FF1A  6E01               	movwf	?_adc,c
   542  00FF1C  5006               	movf	??_adc+3,w,c
   543  00FF1E  6E02               	movwf	?_adc+1,c
   544  00FF20  0012               	return		;funcret
   545  00FF22                     __end_of_adc:
   546                           	opt callstack 0
   547                           
   548 ;; *************** function ___lwdiv *****************
   549 ;; Defined at:
   550 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  dividend        2    7[COMRAM] unsigned int 
   553 ;;  divisor         2    9[COMRAM] unsigned int 
   554 ;; Auto vars:     Size  Location     Type
   555 ;;  quotient        2   11[COMRAM] unsigned int 
   556 ;;  counter         1   13[COMRAM] unsigned char 
   557 ;; Return value:  Size  Location     Type
   558 ;;                  2    7[COMRAM] unsigned int 
   559 ;; Registers used:
   560 ;;		wreg, status,2, status,0
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   566 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;Total ram usage:        7 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; This function calls:
   573 ;;		Nothing
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text3
   580  00FE68                     __ptext3:
   581                           	opt callstack 0
   582  00FE68                     ___lwdiv:
   583                           	opt callstack 30
   584                           
   585                           ;incstack = 0
   586  00FE68  0E00               	movlw	0
   587  00FE6A  6E0D               	movwf	___lwdiv@quotient+1,c
   588  00FE6C  0E00               	movlw	0
   589  00FE6E  6E0C               	movwf	___lwdiv@quotient,c
   590  00FE70  500A               	movf	___lwdiv@divisor,w,c
   591  00FE72  100B               	iorwf	___lwdiv@divisor+1,w,c
   592  00FE74  B4D8               	btfsc	status,2,c
   593  00FE76  D01C               	goto	l577
   594  00FE78  0E01               	movlw	1
   595  00FE7A  6E0E               	movwf	___lwdiv@counter,c
   596  00FE7C  D004               	goto	l949
   597  00FE7E                     l947:
   598  00FE7E  90D8               	bcf	status,0,c
   599  00FE80  360A               	rlcf	___lwdiv@divisor,f,c
   600  00FE82  360B               	rlcf	___lwdiv@divisor+1,f,c
   601  00FE84  2A0E               	incf	___lwdiv@counter,f,c
   602  00FE86                     l949:
   603  00FE86  AE0B               	btfss	___lwdiv@divisor+1,7,c
   604  00FE88  D7FA               	goto	l947
   605  00FE8A                     u170:
   606  00FE8A  90D8               	bcf	status,0,c
   607  00FE8C  360C               	rlcf	___lwdiv@quotient,f,c
   608  00FE8E  360D               	rlcf	___lwdiv@quotient+1,f,c
   609  00FE90  500A               	movf	___lwdiv@divisor,w,c
   610  00FE92  5C08               	subwf	___lwdiv@dividend,w,c
   611  00FE94  500B               	movf	___lwdiv@divisor+1,w,c
   612  00FE96  5809               	subwfb	___lwdiv@dividend+1,w,c
   613  00FE98  A0D8               	btfss	status,0,c
   614  00FE9A  D005               	goto	l959
   615  00FE9C  500A               	movf	___lwdiv@divisor,w,c
   616  00FE9E  5E08               	subwf	___lwdiv@dividend,f,c
   617  00FEA0  500B               	movf	___lwdiv@divisor+1,w,c
   618  00FEA2  5A09               	subwfb	___lwdiv@dividend+1,f,c
   619  00FEA4  800C               	bsf	___lwdiv@quotient,0,c
   620  00FEA6                     l959:
   621  00FEA6  90D8               	bcf	status,0,c
   622  00FEA8  320B               	rrcf	___lwdiv@divisor+1,f,c
   623  00FEAA  320A               	rrcf	___lwdiv@divisor,f,c
   624  00FEAC  2E0E               	decfsz	___lwdiv@counter,f,c
   625  00FEAE  D7ED               	goto	u170
   626  00FEB0                     l577:
   627  00FEB0  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
   628  00FEB4  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
   629  00FEB8  0012               	return		;funcret
   630  00FEBA                     __end_of___lwdiv:
   631                           	opt callstack 0
   632  0000                     
   633                           	psect	rparam
   634  0000                     tosu	equ	0xFFF
   635                           tosh	equ	0xFFE
   636                           tosl	equ	0xFFD
   637                           stkptr	equ	0xFFC
   638                           pclatu	equ	0xFFB
   639                           pclath	equ	0xFFA
   640                           pcl	equ	0xFF9
   641                           tblptru	equ	0xFF8
   642                           tblptrh	equ	0xFF7
   643                           tblptrl	equ	0xFF6
   644                           tablat	equ	0xFF5
   645                           prodh	equ	0xFF4
   646                           prodl	equ	0xFF3
   647                           indf0	equ	0xFEF
   648                           postinc0	equ	0xFEE
   649                           postdec0	equ	0xFED
   650                           preinc0	equ	0xFEC
   651                           plusw0	equ	0xFEB
   652                           fsr0h	equ	0xFEA
   653                           fsr0l	equ	0xFE9
   654                           wreg	equ	0xFE8
   655                           indf1	equ	0xFE7
   656                           postinc1	equ	0xFE6
   657                           postdec1	equ	0xFE5
   658                           preinc1	equ	0xFE4
   659                           plusw1	equ	0xFE3
   660                           fsr1h	equ	0xFE2
   661                           fsr1l	equ	0xFE1
   662                           bsr	equ	0xFE0
   663                           indf2	equ	0xFDF
   664                           postinc2	equ	0xFDE
   665                           postdec2	equ	0xFDD
   666                           preinc2	equ	0xFDC
   667                           plusw2	equ	0xFDB
   668                           fsr2h	equ	0xFDA
   669                           fsr2l	equ	0xFD9
   670                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     19      19
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___lwdiv
    ___lwdiv->_adc

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1230
                                             14 COMRAM     5     5      0
                            ___lwdiv
                                _adc
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                5     3      2     624
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc                                                  7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                              7 COMRAM     7     3      4
                                _adc (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     _adc (ARG)
   _adc
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     13      13       1       15.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon May 18 20:29:41 2020

                     l43 FEEE                       l35 FE44                       l46 FEF0  
                     l72 FF4A                       l77 FFC2                       l78 FFC0  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l577 FEB0  
                    l923 FEBE                      l931 FECC                      l907 FE40  
                    l925 FEC2                      l927 FEC6                      l919 FE5A  
                    l947 FE7E                      l949 FE86                      l959 FEA6  
                    l995 FF82             __CFG_CPB$OFF 000000                      u170 FE8A  
                    u155 FEFC             __CFG_CPD$OFF 000000                      _adc FEBA  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     ?_adc 0001  
                   l1001 FF8A                     l1015 FFF8              main@display 000F  
           __CFG_PWRT$ON 000000                     _main FF22                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ??_adc 0003                    ?_main 0001          __end_of___lwdiv FEBA  
                  _PORTD 000F83                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _delay FE36                    main@i 0010  
         __CFG_BOREN$OFF 000000                    status 000FD8          __initialization FE2C  
           __end_of_main 0000           __CFG_OSC$HSPLL 000000                   ??_main 000F  
          __activetblptr 000002                   ?_delay 0001                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3           __CFG_XINST$OFF 000000                ??___lwdiv 000C  
                 delay@i 0003                   delay@j 0005                   tblptru 000FF8  
             __accesstop 0080  __end_of__initialization FE2C          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_delay FE68  
                ??_delay 0003                  __Hparam 0000                  __Lparam 0000  
                ___lwdiv FE68          __CFG_STVREN$OFF 000000                  __pcinit FE2C  
                __ramtop 1000                  __ptext0 FF22                  __ptext1 FE36  
                __ptext2 FEBA                  __ptext3 FE68             __size_of_adc 0068  
                delay@ms 0001                  main@tmp 0012     end_of_initialization FE2C  
          __Lmediumconst 0000                _PORTBbits 000F81                _PORTEbits 000F84  
    start_initialization FE2C              __end_of_adc FF22         __CFG_LPT1OSC$OFF 000000  
       ___lwdiv@dividend 0008        __CFG_CCP2MX$PORTC 000000                 ?___lwdiv 0008  
       ___lwdiv@quotient 000C           __size_of_delay 0032         __CFG_WDTPS$32768 000000  
             _ADCON0bits 000FC2                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___lwdiv 0052                 adc@kanal 0007          ___lwdiv@divisor 000A  
        ___lwdiv@counter 000E            __size_of_main 00DE  
